name: Build and Deploy

on:
  push:
    branches:
      - '**'  # Run build on all branches
  pull_request:
    branches:
      - main  # Run build on PRs to main

jobs:
  build:
    name: Build Flutter Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./flutter_frontend/multimodal_routeplanner

    steps:

      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - run: flutter doctor

      - name: Install dependencies
        run: flutter pub get

      - name: Build Flutter Web
        run: |
          flutter gen-l10n
          flutter build web --target=lib/main.dart

      - name: Modify index.html
        run: sed -i 's|<base href="/">|<base href="/web/">|' flutter_frontend/multimodal_routeplanner/build/web/index.html

      - name: Copy built files to Flask templates
        run: cp -r flutter_frontend/multimodal_routeplanner/build/web/* flask_app/templates/

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t your-docker-username/your-app-name:latest ./flask_app
          docker push your-docker-username/your-app-name:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          script: |
            cd /path/to/your/project/root
            docker pull your-docker-username/your-app-name:latest
            docker-compose up -d
